package dev._3000IQPlay.trillium.modules.exploit;

import dev._3000IQPlay.trillium.Trillium;
import dev._3000IQPlay.trillium.modules.Module;
import dev._3000IQPlay.trillium.setting.Setting;
import dev._3000IQPlay.trillium.util.InventoryUtil;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.init.Items;
import net.minecraft.item.ItemBucketMilk;
import net.minecraft.item.ItemFood;
import net.minecraft.item.ItemPotion;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.client.CPacketPlayerTryUseItem;
import net.minecraft.util.EnumHand;
import net.minecraftforge.event.entity.player.PlayerInteractEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class FastEat
        extends Module {
    private final Setting<Mode> mode = this.register(new Setting<Mode>("Mode", Mode.Packet));
    private final Setting<Integer> packetSize = this.register(new Setting<Integer>("PacketIteration", 20, 0, 40, v -> this.mode.getValue() == Mode.Packet));
	private final Setting<Float> timerValue = this.register(new Setting<Float>("Timer", 1.15f, 0.1f, 2.0f, v -> this.mode.getValue() == Mode.Timer));
	public boolean usedTimer;

    public FastEat() {
        super("FastEat", "Using magic to eat!!!", Module.Category.EXPLOIT, true, false, false);
    }

    @Override
    public void onUpdate() {
		if (usedTimer) {
            Trillium.TIMER = 1.0f;
            usedTimer = false;
        }
		if (FastEat.mc.player.isHandActive() && (FastEat.mc.player.getHeldItemMainhand().getItem() instanceof ItemFood || FastEat.mc.player.getHeldItemMainhand().getItem() instanceof ItemBucketMilk || FastEat.mc.player.getHeldItemMainhand().getItem() instanceof ItemPotion)) {
            if (this.mode.getValue() == Mode.Packet) {
                int i = 0;
                while ((Integer) i < this.packetSize.getValue().intValue()) {
                    FastEat.mc.player.connection.sendPacket((Packet) new CPacketPlayer());
                    ++i;
                }
                FastEat.mc.player.stopActiveHand();
            }
		    if (this.mode.getValue() == Mode.Timer) {
                Trillium.TIMER = this.timerValue.getValue().floatValue();
                usedTimer = true;
            }
		    if (this.mode.getValue() == Mode.Instant) {
		        FastEat.sendMonkeyToWork(35);
			    FastEat.mc.playerController.onStoppedUsingItem(FastEat.mc.player);
		    }
		    if (this.mode.getValue() == Mode.Matrix) {
			    Trillium.TIMER = 0.5f;
		        usedTimer = true;
                FastEat.sendMonkeyToWork(1);
            }
		    if (this.mode.getValue() == Mode.AAC) {
			    Trillium.TIMER = 0.49f;
                usedTimer = true;
                FastEat.sendMonkeyToWork(2);
		    }
		}
    }

    @SubscribeEvent
    public void onPlayerRightClick(PlayerInteractEvent.RightClickItem event) {
        if (event.getItemStack().getItem().equals((Object) Items.GOLDEN_APPLE) && this.mode.getValue() == Mode.Desync) {
            event.setCanceled(true);
            event.getItemStack().getItem().onItemUseFinish(event.getItemStack(), event.getWorld(), (EntityLivingBase) event.getEntityPlayer());
        }
    }
	
	public static void sendMonkeyToWork(Integer num) {
		int monkeys = 0;
		while ((Integer) monkeys <= num) {
	        FastEat.mc.player.connection.sendPacket((Packet) new CPacketPlayer(FastEat.mc.player.onGround));
			++monkeys;
		}
	}
	
	public void onDisable() {
		Trillium.TIMER = 1.0f;
		super.onDisable();
	}

    public static enum Mode {
        Packet,
        Desync,
		Instant,
		Timer,
		Matrix,
		AAC;
    }
}

